openapi: 3.0.0
info:
  title: RailRoad API
  version: 1.0.0
  description: Railroad API for managing users, tickets, trains, and train stations

servers:
  - url: http://localhost:3000
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum: ["user", "employee", "admin"]

    Ticket:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        trainId:
          type: string
        seatNumber:
          type: string
        price:
          type: number

    Train:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        capacity:
          type: number

    TrainStation:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        location:
          type: string

security:
  - bearerAuth: []

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
        '500':
          description: Error creating user

  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '400':
          description: Invalid email or password
        '500':
          description: Error logging in user

  /:
    get:
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching users

  /{id}:
    get:
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching user

    put:
      summary: Update user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '403':
          description: Access denied. You can only update your own profile or Only admins can update roles.
        '404':
          description: User not found
        '500':
          description: Error updating user

    delete:
      summary: Delete user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Error deleting user

  /tickets:
    get:
      summary: Get all tickets
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching tickets

    post:
      summary: Create a new ticket
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: Ticket created successfully
        '500':
          description: Error creating ticket

  /tickets/{id}:
    get:
      summary: Get ticket by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ticket found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching ticket

    put:
      summary: Update ticket by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: Ticket updated successfully
        '403':
          description: Access denied. Insufficient permissions.
        '404':
          description: Ticket not found
        '500':
          description: Error updating ticket

    delete:
      summary: Delete ticket by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ticket deleted successfully
        '404':
          description: Ticket not found
        '500':
          description: Error deleting ticket

  /trains:
    get:
      summary: Get all trains
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of trains
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Train'
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching trains

    post:
      summary: Create a new train
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Train'
      responses:
        '201':
          description: Train created successfully
        '500':
          description: Error creating train

  /trains/{id}:
    get:
      summary: Get train by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Train found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Train'
        '404':
          description: Train not found
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching train

    put:
      summary: Update train by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Train'
      responses:
        '200':
          description: Train updated successfully
        '403':
          description: Access denied. Insufficient permissions.
        '404':
          description: Train not found
        '500':
          description: Error updating train

    delete:
      summary: Delete train by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Train deleted successfully
        '404':
          description: Train not found
        '500':
          description: Error deleting train

  /trainStations:
    get:
      summary: Get all train stations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of train stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainStation'
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching train stations

    post:
      summary: Create a new train station
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainStation'
      responses:
        '201':
          description: Train station created successfully
        '500':
          description: Error creating train station

  /trainStations/{id}:
    get:
      summary: Get train station by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Train station found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainStation'
        '404':
          description: Train station not found
        '403':
          description: Access denied. Insufficient permissions.
        '500':
          description: Error fetching train station

    put:
      summary: Update train station by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainStation'
      responses:
        '200':
          description: Train station updated successfully
        '403':
          description: Access denied. Insufficient permissions.
        '404':
          description: Train station not found
        '500':
          description: Error updating train station

    delete:
      summary: Delete train station by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Train station deleted successfully
        '404':
          description: Train station not found
        '500':
          description: Error deleting train station
